# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

type Collection {
  _count: CollectionCount
  archivedAt: DateTimeISO
  createdAt: DateTimeISO!
  deletedAt: DateTimeISO
  description: String
  id: String!
  isActive: Boolean!
  isArchived: Boolean!
  isDeleted: Boolean!
  name: String!
  ownerId: String!
  todos: [Todo!]!
  updatedAt: DateTimeISO!
}

input CollectionCollaboratorListRelationFilter {
  every: CollectionCollaboratorWhereInput
  none: CollectionCollaboratorWhereInput
  some: CollectionCollaboratorWhereInput
}

input CollectionCollaboratorWhereInput {
  AND: [CollectionCollaboratorWhereInput!]
  NOT: [CollectionCollaboratorWhereInput!]
  OR: [CollectionCollaboratorWhereInput!]
  collection: CollectionRelationFilter
  collectionId: StringFilter
  id: StringFilter
  permission: EnumPermissionFilter
  user: UserRelationFilter
  userId: StringFilter
}

type CollectionCount {
  collaborators(where: CollectionCollaboratorWhereInput): Int!
  todos(where: TodoWhereInput): Int!
}

input CollectionListRelationFilter {
  every: CollectionWhereInput
  none: CollectionWhereInput
  some: CollectionWhereInput
}

input CollectionNullableRelationFilter {
  is: CollectionWhereInput
  isNot: CollectionWhereInput
}

input CollectionRelationFilter {
  is: CollectionWhereInput
  isNot: CollectionWhereInput
}

input CollectionWhereInput {
  AND: [CollectionWhereInput!]
  NOT: [CollectionWhereInput!]
  OR: [CollectionWhereInput!]
  collaborators: CollectionCollaboratorListRelationFilter
  description: StringNullableFilter
  id: StringFilter
  isActive: BoolFilter
  isArchived: BoolFilter
  isDeleted: BoolFilter
  name: StringFilter
  owner: UserRelationFilter
  ownerId: StringFilter
  todos: TodoListRelationFilter
}

input CompleteTodoInput {
  completed: Boolean!
  id: String!
}

input CreateCollectionInput {
  description: String
  name: String!
}

input CreateTodoInput {
  collectionId: String
  content: JSON
  dueDate: DateTimeISO
  title: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

input DateTimeNullableFilter {
  equals: DateTimeISO
  gt: DateTimeISO
  gte: DateTimeISO
  in: [DateTimeISO!]
  isSet: Boolean
  lt: DateTimeISO
  lte: DateTimeISO
  not: NestedDateTimeNullableFilter
  notIn: [DateTimeISO!]
}

input EnumPermissionFilter {
  equals: Permission
  in: [Permission!]
  not: NestedEnumPermissionFilter
  notIn: [Permission!]
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

input JsonNullableFilter {
  equals: JSON
  isSet: Boolean
  not: JSON
}

input LoginUserInput {
  email: String!
  password: String!
}

type LoginUserResponse {
  token: String!
  user: User!
}

type Mutation {
  archiveTodo(id: String!): Todo!
  completeTodo(data: CompleteTodoInput!): Todo!
  createCollection(data: CreateCollectionInput!): Collection!
  createTodo(data: CreateTodoInput!): Todo!
  deleteTodo(id: String!): Todo!
  loginUser(data: LoginUserInput!): LoginUserResponse!
  logoutUser: Boolean!
  registerUser(data: RegisterUserInput!): User!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedDateTimeNullableFilter {
  equals: DateTimeISO
  gt: DateTimeISO
  gte: DateTimeISO
  in: [DateTimeISO!]
  isSet: Boolean
  lt: DateTimeISO
  lte: DateTimeISO
  not: NestedDateTimeNullableFilter
  notIn: [DateTimeISO!]
}

input NestedEnumPermissionFilter {
  equals: Permission
  in: [Permission!]
  not: NestedEnumPermissionFilter
  notIn: [Permission!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  isSet: Boolean
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

enum Permission {
  COMPLETE
  EDIT
  OWNER
  VIEW
}

type Query {
  fetchManyCollectiones: [Collection!]!
  fetchManyTodos: [Todo!]!
  findUser: User
}

enum QueryMode {
  default
  insensitive
}

input RegisterUserInput {
  email: String!
  name: String
  password: String!
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  isSet: Boolean
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Todo {
  archivedAt: DateTimeISO
  collectionId: String
  completed: Boolean!
  content: JSON
  createdAt: DateTimeISO!
  creatorId: String!
  deletedAt: DateTimeISO
  dueDate: DateTimeISO
  id: String!
  isArchived: Boolean!
  isDeleted: Boolean!
  title: String!
  updatedAt: DateTimeISO!
}

input TodoListRelationFilter {
  every: TodoWhereInput
  none: TodoWhereInput
  some: TodoWhereInput
}

input TodoWhereInput {
  AND: [TodoWhereInput!]
  NOT: [TodoWhereInput!]
  OR: [TodoWhereInput!]
  collection: CollectionNullableRelationFilter
  collectionId: StringNullableFilter
  completed: BoolFilter
  content: JsonNullableFilter
  creator: UserRelationFilter
  creatorId: StringFilter
  dueDate: DateTimeNullableFilter
  id: StringFilter
  isArchived: BoolFilter
  isDeleted: BoolFilter
  title: StringFilter
}

type User {
  _count: UserCount
  birthday: String
  createdAt: DateTimeISO!
  deletedAt: DateTimeISO
  email: String!
  id: String!
  isActive: Boolean!
  isDeleted: Boolean!
  name: String
  password: String!
  phoneNumber: String
  updatedAt: DateTimeISO!
}

type UserCount {
  collaborations(where: CollectionCollaboratorWhereInput): Int!
  collections(where: CollectionWhereInput): Int!
  todos(where: TodoWhereInput): Int!
}

input UserRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  birthday: StringNullableFilter
  collaborations: CollectionCollaboratorListRelationFilter
  collections: CollectionListRelationFilter
  email: StringFilter
  id: StringFilter
  isActive: BoolFilter
  isDeleted: BoolFilter
  name: StringNullableFilter
  password: StringFilter
  phoneNumber: StringNullableFilter
  todos: TodoListRelationFilter
}